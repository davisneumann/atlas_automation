{
	"info": {
		"_postman_id": "13a90fe9-bcce-4d01-9a2d-57338ce708b2",
		"name": "Atlas - OneLogin Offboarding",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Generate OL Tokens",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1bca5475-216d-47b9-afdd-69800a7931e2",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"var temp_OneLogin_token = jsonData.data[0].access_token",
							"pm.globals.set(\"temp_OL_token\", temp_OneLogin_token)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "client_id:{{client_id}}, client_secret:{{client_secret}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\"grant_type\":\"client_credentials\"\n}",
					"options": {
						"raw": {}
					}
				},
				"url": {
					"raw": "https://api.us.onelogin.com/auth/oauth2/token?grant_type=client_credentials",
					"protocol": "https",
					"host": [
						"api",
						"us",
						"onelogin",
						"com"
					],
					"path": [
						"auth",
						"oauth2",
						"token"
					],
					"query": [
						{
							"key": "grant_type",
							"value": "client_credentials"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get OL Entitlements Removing Requested",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d2becc70-0037-426f-860d-d1570348defd",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.variables.set(\"jsonData\",JSON.parse(responseBody));",
							"",
							"//write to counsel the jsonData variable",
							"//console.log(\"Hello\");",
							"//console.log(jsonData);",
							"",
							"//console.log(jsonData.total);",
							"//console.log(jsonData.issues[1])",
							"",
							"",
							"pm.variables.set(\"loopCount\",0);",
							"pm.variables.set(\"numOfLoops\",jsonData.issues.length);",
							"var numOfLoops = pm.variables.get(\"numOfLoops\")",
							"jsonData.issues.forEach(function(issue)",
							"{",
							"    //console.log(issue.key);",
							"    //if (issue.fields.customfield_10171.accountId !== null){",
							"         //console.log(issue.fields.assignee.accountId);",
							"    //    console.log(\"not null\")",
							"    //}",
							"    //else{",
							"    //    console.log(\"null\")",
							"    //}",
							"});",
							"console.log(\"Number of loops to run \" + numOfLoops)",
							"//console.log(numOfissues);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{sourceAuthToken}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{sourceUserName}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{sourceUrl}}/rest/api/3/search?jql=issuetype%20%3D%20Entitlement%20AND%20project%20%3D%20TEAM%20AND%20status%20%3D%20\"Removal%20Pending\"%20AND%20System%20%3D%20OneLogin%20ORDER%20BY%20priority%20DESC",
					"protocol": "https",
					"host": [
						"{{sourceUrl}}"
					],
					"path": [
						"rest",
						"api",
						"3",
						"search"
					],
					"query": [
						{
							"key": "jql",
							"value": "issuetype%20%3D%20Entitlement%20AND%20project%20%3D%20TEAM%20AND%20status%20%3D%20\"Removal%20Pending\"%20AND%20System%20%3D%20OneLogin%20ORDER%20BY%20priority%20DESC"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Beginning of Loop",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "00ec6d82-66ab-4e61-a12d-f896b9db7ada",
						"exec": [
							"var loopCount = pm.variables.get(\"loopCount\");",
							"var numOfLoops = pm.variables.get(\"numOfLoops\");",
							"var jsonData = pm.variables.get(\"jsonData\");",
							"",
							"console.log(loopCount);",
							"console.log(numOfLoops);",
							"",
							"if (loopCount<numOfLoops){",
							"    console.log(\"No assignee for \" + jsonData.issues[loopCount].key);",
							"    pm.globals.set(\"issueKey\", jsonData.issues[loopCount].key)",
							"    pm.globals.set(\"parentKey\", jsonData.issues[loopCount].fields.parent.key)",
							"    postman.setNextRequest(\"Get Person Email\");",
							"    pm.variables.set('goto', 'MyRequest');",
							"    pm.variables.set(\"loopCount\",loopCount);    ",
							"}",
							"else",
							"{",
							"    console.log(\"End Of Loop\")",
							"    postman.setNextRequest(\"null\");",
							"    pm.variables.set('goto', 'MyRequest');",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/get?test=123",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"get"
					],
					"query": [
						{
							"key": "test",
							"value": "123"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Person Email",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "72ba0f04-73df-4d50-bd59-8ab5ff6bdfe7",
						"exec": [
							"",
							"//Variables for Testing. Need to be commented out for PROD",
							"//pm.globals.set(\"personRecordKey\",\"TEAM-1\")",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "f233e6ef-5235-4e28-a7eb-74adcd15c510",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"var emailAddy = encodeURI(jsonData.fields.customfield_10115)",
							"pm.globals.set(\"oneloginEmail\", emailAddy)",
							"console.log(emailAddy)"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{sourceAuthToken}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{sourceUserName}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "",
						"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
					},
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {}
					}
				},
				"url": {
					"raw": "https://upstartnetwork.atlassian.net/rest/api/3/issue/{{parentKey}}",
					"protocol": "https",
					"host": [
						"upstartnetwork",
						"atlassian",
						"net"
					],
					"path": [
						"rest",
						"api",
						"3",
						"issue",
						"{{parentKey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get OL User",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "de7abbf2-4555-4f4c-adf0-1d3e91bde6d2",
						"exec": [
							"// pm.globals.set(\"oneloginEmail\", \"test23@upstart.com\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ab67ca93-5945-4cc9-bfb8-bc81a4059ce5",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"if (jsonData.data.length == 0) {",
							"    console.log(\"Bad Return.\")",
							"    // this is the end of logic for loop",
							"    var loopCount = pm.variables.get(\"loopCount\");",
							"    loopCount=loopCount+1;",
							"    pm.variables.set(\"loopCount\",loopCount);",
							"    postman.setNextRequest(\"Beginning of Loop\");",
							"    pm.variables.set('goto', 'MyRequest');",
							"} else {",
							"    console.log(\"Good Return.\")",
							"    //.setNextRequest(\"Transition to Remove\");",
							"    var ol_user_id = jsonData.data[0].id",
							"    pm.globals.set(\"ol_id_user\", ol_user_id)",
							"    console.log(ol_user_id)",
							"}",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{temp_OL_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{temp_token}}"
					}
				],
				"url": {
					"raw": "https://api.us.onelogin.com/api/1/users?email={{oneloginEmail}}",
					"protocol": "https",
					"host": [
						"api",
						"us",
						"onelogin",
						"com"
					],
					"path": [
						"api",
						"1",
						"users"
					],
					"query": [
						{
							"key": "email",
							"value": "{{oneloginEmail}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Transition to Remove",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dc26dd7c-0c31-4d41-a93f-be955015dbe0",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "397c5dcf-0cac-46c7-b290-94161e8c72d6",
						"exec": [
							"var loopCount = pm.variables.get(\"loopCount\");",
							"var numOfLoops =pm.variables.get(\"numOfLoops\");",
							"var jsonData =pm.variables.get(\"jsonData\");",
							"console.log(loopCount);",
							"console.log(numOfLoops);",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{sourceAuthToken}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{sourceUserName}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"transition\": {\n    \"id\": \"61\"\n  }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{sourceUrl}}/rest/api/3/issue/:issueIdOrKey/transitions",
					"protocol": "https",
					"host": [
						"{{sourceUrl}}"
					],
					"path": [
						"rest",
						"api",
						"3",
						"issue",
						":issueIdOrKey",
						"transitions"
					],
					"variable": [
						{
							"key": "issueIdOrKey",
							"value": "{{issueKey}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Set State for a OL User",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "c6c3320f-5e65-46fe-bd63-e3ca7cfd3789",
						"exec": [
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{temp_OL_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"status\":2\n}",
					"options": {
						"raw": {}
					}
				},
				"url": {
					"raw": "https://api.us.onelogin.com/api/1/users/{{ol_id_user}}",
					"protocol": "https",
					"host": [
						"api",
						"us",
						"onelogin",
						"com"
					],
					"path": [
						"api",
						"1",
						"users",
						"{{ol_id_user}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "End of Loop",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "df433b22-fcce-49dd-9e4b-236e6229f019",
						"exec": [
							"var loopCount = pm.variables.get(\"loopCount\");",
							"var numOfLoops =pm.variables.get(\"numOfLoops\");",
							"var jsonData =pm.variables.get(\"jsonData\");",
							"",
							"console.log(loopCount);",
							"console.log(numOfLoops);",
							"",
							"if (loopCount<numOfLoops){",
							"    //another person record, let's go",
							"    ",
							"    console.log(\"Finding if person record has assignee\");",
							"    console.log(\"Custom field for user: \" + jsonData.issues[loopCount].fields.summary)",
							"    ",
							"    ",
							"    if (jsonData.issues[loopCount].fields.summary.accountId !== null){",
							"    //console.log(issue.fields.assignee.accountId);",
							"        postman.setNextRequest(\"Create Atlas 101 Training Checklist\");",
							"        pm.variables.set('goto', 'MyRequest');",
							"    }",
							"    else",
							"    {",
							"        console.log(\"No assignee for\" + jsonData.issues[loopCount].key);",
							"        postman.setNextRequest(\"Beginning of Loop\");",
							"        pm.variables.set('goto', 'MyRequest');",
							"        loopCount=loopCount+1;",
							"        pm.variables.set(\"loopCount\",loopCount);",
							"    }",
							"    ",
							"    ",
							"    ",
							"    //console.log(jsonData.issues[loopCount].key);",
							"   ",
							"    //loopCount=loopCount+1;",
							"    //pm.variables.set(\"loopCount\",loopCount);",
							"    ",
							"    //postman.setNextRequest(\"Stub Example\");",
							"    //pm.variables.set('goto', 'MyRequest');",
							"    ",
							"}",
							"else",
							"{",
							"    console.log(\"End Of Loop\")",
							"    postman.setNextRequest(\"null\");",
							"    pm.variables.set('goto', 'MyRequest');",
							"    ",
							"    ",
							"}",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "4c78c1be-3f99-4180-a194-79bdac42c78b",
						"exec": [
							"var loopCount = pm.variables.get(\"loopCount\");",
							"loopCount=loopCount+1;",
							" pm.variables.set(\"loopCount\",loopCount);",
							" postman.setNextRequest(\"Beginning of Loop\");",
							" pm.variables.set('goto', 'MyRequest');"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/get?test=123",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"get"
					],
					"query": [
						{
							"key": "test",
							"value": "123"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Transitions",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a84295a3-0dd1-4c28-bada-fadc4abca86b",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.variables.set(\"jsonData\",JSON.parse(responseBody));",
							"",
							"",
							"//write to counsel the jsonData variable",
							"//console.log(\"Hello\");",
							"//console.log(jsonData);",
							"",
							"//console.log(jsonData.total);",
							"//console.log(jsonData.issues[1])",
							"",
							"",
							"pm.variables.set(\"loopCount\",0);",
							"pm.variables.set(\"numOfLoops\",jsonData.issues.length);",
							"var numOfLoops = pm.variables.get(\"numOfLoops\")",
							"jsonData.issues.forEach(function(issue)",
							"{",
							"    //console.log(issue.key);",
							"    //if (issue.fields.customfield_10171.accountId !== null){",
							"         //console.log(issue.fields.assignee.accountId);",
							"    //    console.log(\"not null\")",
							"    //}",
							"    //else{",
							"    //    console.log(\"null\")",
							"    //}",
							"});",
							"console.log(\"Number of loops to run \" + numOfLoops)",
							"//console.log(numOfissues);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{sourceAuthToken}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{sourceUserName}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{sourceUrl}}/rest/api/3/issue/:issueIdOrKey/transitions",
					"protocol": "https",
					"host": [
						"{{sourceUrl}}"
					],
					"path": [
						"rest",
						"api",
						"3",
						"issue",
						":issueIdOrKey",
						"transitions"
					],
					"variable": [
						{
							"key": "issueIdOrKey",
							"value": "TEAM-1044"
						}
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}